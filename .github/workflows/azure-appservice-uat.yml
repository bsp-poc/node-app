
name: "NPM Build to Deploy"
on:
  push:
    branches: [ "uat" ]
  workflow_dispatch:

env:
  AZURE_PUBLISH_PROFILE: 'secrets.AZUREAPPSERVICE_PUBLISHPROFILE_441B36245F134200B9C77A716EE5BDA7'
  AZURE_WEBAPP_NAME: 'node-poc'    # Azure App Service: Web App Name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '18.x'                # set this to the node version to use
  AZURE_DEPLOYMENT_SLOT: 'uat'

permissions:
  contents: read
  

jobs:
 
  sonarcloud: #security integration
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.verbose=true


  OSSAR-Scan:
    # OSSAR runs on windows-latest.
    # ubuntu-latest and macos-latest support coming soon
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

      # Run open source static analysis tools
    - name: Run OSSAR
      uses: github/ossar-action@v1
      id: ossar

      # Upload results to the Security tab
    - name: Upload OSSAR results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.ossar.outputs.sarifFile }}
          
  build:
    runs-on: ubuntu-latest
    needs: 
      - sonarcloud
      - OSSAR-Scan
    steps:
    - uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - name: npm install, build, and test
      run: |
        npm config set package "cph-poc"
        npm install
        npm run build --if-present
        npm run test --if-present
    
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: .
      
    
  publish-gpr: # package management - publish to npm
    needs:
      - build
      - sonarcloud
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/uat' || github.ref == 'refs/heads/main' 
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - name: replace values MY_PAT_SECRET with GH PAT
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "MY_PAT_SECRET"
          replace: ${{ secrets.GITHUB_TOKEN }}
          include: "**.npmrc"
          exclude: ".git/**"

      - name: read .npmrc 
        id: readnpmrc
        uses: jaywcjlove/github-action-read-file@main
        with:
          path: .npmrc
      
      - name: print .npmrc
        run: |
          echo "==========================================="
          echo "${{ steps.readnpmrc.outputs.content }}"
      
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://npm.pkg.github.com/
          scope: '@cph-poc'
      - run: npm install
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN : ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



  deploy: 
    name: Deploy to Azure App Service
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: 
      - build
    environment: uat
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: deploy to prod #if: github.ref == 'refs/heads/main' ||  github.ref == 'refs/heads/prod'
      id: deploy-to-webapp-prod
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        slot-name:  "${{ env.AZURE_DEPLOYMENT_SLOT }}"
